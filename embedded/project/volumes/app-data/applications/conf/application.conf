include "applications-core.conf"
include "applications-env.conf"
include "applications-env-db.conf"

##################################################################
# MAIN CONFIGURATION                                            ##
##################################################################

spring.application.name="applications"

server.servlet.context-path="/"${spring.application.name}
server.servlet.context-path=${?MS_SERVLET_CONTEXT_PATH_APPLICATIONS}

ix.home=${spring.application.name}".ix"
ix.home=${?IX_HOME}

# We need to point to the substances service ginas.ix folder
ix.home_substances="substances.ix"
ix.home_substances=${?IX_HOME_SUBSTANCES}

application.host="http://localhost:8080"
application.host=${?APPLICATION_HOST}

# Server port is used in embedded Tomcat
server.port=""
server.port=${?MS_SERVER_PORT_APPLICATIONS}

# Secure session off for dev, but if using HTTPS it's better to have it on
gsrs.sessions.sessionSecure=false

gsrs.substances.molwitch.enabled=false

# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
#debug=true
spring.main.allow-bean-definition-overriding=true

# export path, has a default value for each microservice, but can be overridden.
# in practice, it should be the same disk location at the substances export path.
# it might make sense to use ${IX_HOME_SUBSTANCES}/exports
ix.ginas.export.path=${?MS_EXPORT_PATH_APPLICATIONS}

# maximum file upload size
spring.servlet.multipart.max-file-size=512MB
spring.servlet.multipart.max-request-size=512MB

##################################################################
# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
##################################################################
# turn off rabbit mq check for now since we don't use it otherwise it will say we are down
management.health.rabbit.enabled: false

management.endpoints.web.base-path="/service-info/api/v1/"${spring.application.name}"/actuator"
management.endpoints.web.exposure.include=${?MS_ACTUATOR_EXPOSE_ENDPOINTS_APPLICATIONS}

##################################################################
# GSRS CONFIGURATION REPORTS                                    ##
##################################################################

# See document 'How configuration works' for discussion of security implications.
# If in doubt, you probably want false (default) for all optons in production or even online development instances
gsrs.extensions.config.report.api.enabled=${?EXTENSIONS_CONFIG_REPORT_API_ENABLED}
gsrs.services.config.properties.report.api.enabled=${?CONFIG_PROPERTIES_REPORT_API_ENABLED}
gsrs.services.config.properties.report.log.enabled=${?CONFIG_PROPERTIES_REPORT_LOG_ENABLED}

##################################################################
# EUREKA SETTINGS                                               ##
##################################################################

eureka.instance.hostname=${spring.application.name}
eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
#turn off eureka for now
eureka.client.enabled=false
eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}

##################################################################
# DATABASE CONNECTION                                           ##
##################################################################

ix.h2: {
        base = ./${ix.home}/h2,
        substances = ./${ix.home_substances}/h2
      }

spring.datasource.url="jdbc:h2:"${ix.h2.substances}"/sprinxight;AUTO_SERVER=TRUE"
   spring.datasource.url=${?DB_URL_SUBSTANCES}
spring.datasource.driverClassName=org.h2.Driver
   spring.datasource.driverClassName=${?DB_DRIVER_CLASS_NAME}
   spring.datasource.driverClassName=${?DB_DRIVER_CLASS_NAME_SUBSTANCES}
spring.datasource.username=${?DB_USERNAME}
    spring.datasource.username=${?DB_USERNAME_SUBSTANCES}
spring.datasource.password=${?DB_PASSWORD}
    spring.datasource.password=${?DB_PASSWORD_SUBSTANCES}
spring.datasource.connectionTimeout=120000
   spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
   spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT_SUBSTANCES}
spring.datasource.maximumPoolSize=50
   spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
   spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE_SUBSTANCES}
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
   spring.jpa.database-platform=${?DB_DIALECT}
   spring.jpa.database-platform=${?DB_DIALECT_SUBSTANCES}
spring.jpa.hibernate.ddl-auto=none
   spring.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
   spring.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO_SUBSTANCES}
spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
spring.hibernate.show-sql=false

application.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;AUTO_SERVER=TRUE"
   application.datasource.url=${?DB_URL_SRSCID}
   application.datasource.url=${?DB_URL_APPLICATIONS}
application.datasource.driverClassName=org.h2.Driver
   application.datasource.driverClassName=${?DB_DRIVER_CLASS_NAME}
   application.datasource.driverClassName=${?DB_DRIVER_CLASS_NAME_SRSCID}
   application.datasource.driverClassName=${?DB_DRIVER_CLASS_NAME_APPLICATIONS}
application.datasource.username=${?DB_USERNAME}
   application.datasource.username=${?DB_USERNAME_SRSCID}
   application.datasource.username=${?DB_USERNAME_APPLICATIONS}
application.datasource.password=${?DB_PASSWORD}
   application.datasource.password=${?DB_PASSWORD_SRSCID}
   application.datasource.password=${?DB_PASSWORD_APPLICATIONS}
application.datasource.connectionTimeout=120000
   application.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
   application.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT_SRSCID}
   application.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT_APPLICATIONS}
application.datasource.maximumPoolSize=50
   application.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
   application.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE_SRSCID}
   application.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE_APPLICATIONS}
application.jpa.database-platform=org.hibernate.dialect.H2Dialect
   application.jpa.database-platform=${?DB_DIALECT}
   application.jpa.database-platform=${?DB_DIALECT_SRSCID}
   application.jpa.database-platform=${?DB_DIALECT_APPLICATIONS}
application.jpa.hibernate.ddl-auto=none
   application.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
   application.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO_SRSCID}
   application.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO_APPLICATIONS}
application.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
application.hibernate.show-sql=false

##################################################################
# API SETTINGS                                                  ##
##################################################################

substanceAPI.BaseUrl="http://localhost:8080/"
substanceAPI.BaseUrl=${?API_URL}
gsrs.microservice.substances.api.baseURL=${substanceAPI.BaseUrl}"substances"
gsrs.microservice.substances.api.baseURL=${?API_BASE_URL_SUBSTANCES}

gsrs.loopback.port=8080
gsrs.loopback.port=${?APPLICATION_HOST_PORT}
gsrs.loopback.port=${?MS_LOOPBACK_PORT_APPLICATIONS}

##################################################################
# CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
##################################################################

gsrs.validators.applications = [
    {
        "validatorClass" = "gov.hhs.gsrs.application.application.validators.RequiredFieldNonNullValidator",
        "newObjClass" = "gov.hhs.gsrs.application.application.models.Application",
    }
],

# NOT SURE IF WE NEED THIS OR NOT
gsrs.entityprocessors = [
    {
        "class" = "gov.hhs.gsrs.application.application.models.Application",
	    "processor" = "gov.hhs.gsrs.application.application.processors.ApplicationProcessor"
    },
    {
        "class" = "gov.hhs.gsrs.application.applicationall.models.ApplicationAll",
    	"processor" = "gov.hhs.gsrs.application.applicationall.processors.ApplicationAllProcessor"
    },
    {
        "class" = "gov.hhs.gsrs.application.applicationdarrts.models.ApplicationDarrts",
        "processor" = "gov.hhs.gsrs.application.applicationdarrts.processors.ApplicationDarrtsProcessor"
    }
]

# NEED THIS TO AVOID CVApi ERROR
gsrs.entityProcessors=[]


ix.ginas.export.factories.applications = [
  "gov.hhs.gsrs.application.application.exporters.ApplicationExporterFactory"
]

ix.ginas.export.factories.applicationsall = [
  "gov.hhs.gsrs.application.applicationall.exporters.ApplicationAllExporterFactory"
]

gsrs.indexers.list=[
    {
        "indexer" = "gov.hhs.gsrs.application.application.indexers.ApplicationIngredientIndexValueMaker",
        "class" = "gov.hhs.gsrs.application.application.models.Application"
    },
    {
        "indexer" = "gov.hhs.gsrs.application.application.indexers.ApplicationClinicalTrialIndexValueMaker",
        "class" = "gov.hhs.gsrs.application.application.models.Application"
    },
    {
        "indexer" = "gov.hhs.gsrs.application.applicationall.indexers.ApplicationSubstanceIndexValueMaker",
        "class" = "gov.hhs.gsrs.application.applicationall.models.ApplicationAll"
    }
]

# Do we need this in services other than substances?
##################################################################
# LEGACY AUTHENTICATION                                         ##
##################################################################

ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}

##################################################################
# CUSTOM CONFIGURATION                                          ##
##################################################################

include "conf/applications.conf"
include "applications.conf"
